// Generated by Dagger (https://dagger.dev).
package ru.vodolatskii.movies.presentation.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.vodolatskii.movies.domain.MovieRepository;
import ru.vodolatskii.movies.presentation.utils.AndroidResourceProvider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MoviesViewModel_Factory implements Factory<MoviesViewModel> {
  private final Provider<MovieRepository> repositoryProvider;

  private final Provider<AndroidResourceProvider> resourceProvider;

  public MoviesViewModel_Factory(Provider<MovieRepository> repositoryProvider,
      Provider<AndroidResourceProvider> resourceProvider) {
    this.repositoryProvider = repositoryProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public MoviesViewModel get() {
    return newInstance(repositoryProvider.get(), resourceProvider.get());
  }

  public static MoviesViewModel_Factory create(Provider<MovieRepository> repositoryProvider,
      Provider<AndroidResourceProvider> resourceProvider) {
    return new MoviesViewModel_Factory(repositoryProvider, resourceProvider);
  }

  public static MoviesViewModel newInstance(MovieRepository repository,
      AndroidResourceProvider resourceProvider) {
    return new MoviesViewModel(repository, resourceProvider);
  }
}
