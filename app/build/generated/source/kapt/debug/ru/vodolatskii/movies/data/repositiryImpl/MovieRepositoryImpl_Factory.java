// Generated by Dagger (https://dagger.dev).
package ru.vodolatskii.movies.data.repositiryImpl;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.vodolatskii.movies.data.dao.MovieDao;
import ru.vodolatskii.movies.data.sharedPref.PreferenceProvider;
import ru.vodolatskii.remote_module.KPApiService;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieRepositoryImpl_Factory implements Factory<MovieRepositoryImpl> {
  private final Provider<MovieDao> movieDaoProvider;

  private final Provider<KPApiService> kpApiServiceProvider;

  private final Provider<PreferenceProvider> preferencesProvider;

  public MovieRepositoryImpl_Factory(Provider<MovieDao> movieDaoProvider,
      Provider<KPApiService> kpApiServiceProvider,
      Provider<PreferenceProvider> preferencesProvider) {
    this.movieDaoProvider = movieDaoProvider;
    this.kpApiServiceProvider = kpApiServiceProvider;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public MovieRepositoryImpl get() {
    return newInstance(movieDaoProvider.get(), kpApiServiceProvider.get(), preferencesProvider.get());
  }

  public static MovieRepositoryImpl_Factory create(Provider<MovieDao> movieDaoProvider,
      Provider<KPApiService> kpApiServiceProvider,
      Provider<PreferenceProvider> preferencesProvider) {
    return new MovieRepositoryImpl_Factory(movieDaoProvider, kpApiServiceProvider, preferencesProvider);
  }

  public static MovieRepositoryImpl newInstance(MovieDao movieDao, KPApiService kpApiService,
      PreferenceProvider preferences) {
    return new MovieRepositoryImpl(movieDao, kpApiService, preferences);
  }
}
