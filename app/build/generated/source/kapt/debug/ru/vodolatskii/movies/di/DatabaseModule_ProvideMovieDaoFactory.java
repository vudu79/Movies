// Generated by Dagger (https://dagger.dev).
package ru.vodolatskii.movies.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.vodolatskii.movies.data.RoomDB;
import ru.vodolatskii.movies.data.dao.MovieDao;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideMovieDaoFactory implements Factory<MovieDao> {
  private final DatabaseModule module;

  private final Provider<RoomDB> dbProvider;

  public DatabaseModule_ProvideMovieDaoFactory(DatabaseModule module, Provider<RoomDB> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public MovieDao get() {
    return provideMovieDao(module, dbProvider.get());
  }

  public static DatabaseModule_ProvideMovieDaoFactory create(DatabaseModule module,
      Provider<RoomDB> dbProvider) {
    return new DatabaseModule_ProvideMovieDaoFactory(module, dbProvider);
  }

  public static MovieDao provideMovieDao(DatabaseModule instance, RoomDB db) {
    return Preconditions.checkNotNullFromProvides(instance.provideMovieDao(db));
  }
}
